#lang typed/racket/base

(module+ test
(require racket/list
         racket/set
         typed/rackunit)

;; we don't want refactoring to change existing requirements.
;; these regression tests could catch that.


(require "degree-requirements.rkt")

;; when this test case fails, you're going to want a better diagnostic...

(define test-val : (Immutable-HashTable Any Any)
  (make-immutable-hash
   (for/list : (Listof (Pair Any Any))
     ([key (in-list (hash-keys program-requirements))])
     (ann
      (cons key
            (list->set
             (map (inst first Any)
                  (hash-ref program-requirements key))))
      (Pair Any Any)))))

(define expected-val : (Immutable-HashTable Any Any)
  (make-immutable-hash
   (map
    ;; convert lists to sets to disregard order
    (Î» ([pr : (Pair Any (Listof Any))]) : (Pair Any (Setof Any))
      (cons (car pr) (list->set (cdr pr))))
   '((((SE) "2021-2022")
      .
      ("csc101"
       "csc202"
       "csc203"
       "csc357"
       "csc225"
       "csc305"
       "csc308"
       "csc309"
       "csc348"
       "csc349"
       "csc402"
       "csc405"
       "csc406"
       "csc430"
       "csc484"
       (upper-level-se-TE)
       (special-problems/se-TE)
       (se-TE/123)
       (ethics)
       "csc365"
       (se-TE-0)
       (se-TE-1)))
     (((CSC) "2020-2021")
      .
      ("csc101"
       "csc202"
       "csc203"
       "csc357"
       "csc225"
       (csc-SE)
       "csc348"
       "csc349"
       "csc430"
       "csc445"
       "csc453"
       (upper-level-csc-TE)
       (csc-TE/123)
       (csc-TE/special-problems)
       "cpe315"
       (ethics)
       (csc-sp-1)
       (csc-sp-2)
       (csc-TE-0)
       (csc-TE-1)
       (csc-TE-2)
       (csc-TE-3)
       (csc-TE-4)))
     (((SE) "2017-2019")
      .
      ("csc101"
       "csc202"
       "csc203"
       "csc357"
       "csc225"
       "csc305"
       "csc308"
       "csc309"
       "csc348"
       "csc349"
       "csc402"
       "csc405"
       "csc406"
       "csc430"
       "csc484"
       (upper-level-se-TE)
       (special-problems/se-TE)
       (se-TE/123)
       "csc300"
       "csc491"
       "csc492"
       (se-TE-0)
       (se-TE-1)
       (se-TE-2)))
     (((CPE) "2021-2022")
      .
      ((cpe-arch)
       (microcon)
       (circuits)
       (cpe-circuits-lab)
       "ee211"
       "ee241"
       "ee212"
       "ee242"
       (cpe-signals)
       "ee306"
       "ee346"
       "ee307"
       "ee347"
       (cpe-sp-1)
       (cpe-sp-2)
       "csc101"
       "csc202"
       "csc203"
       "csc357"
       "cpe133"
       "cpe233"
       "cpe350"
       "cpe450"
       "csc453"
       "cpe464"
       "csc348"
       (cpe-TE/400)
       (cpe-TE/123)
       (cpe-TE-0)
       (cpe-TE-1)))
     (((CSC) "2021-2022")
      .
      ("csc101"
       "csc202"
       "csc203"
       "csc357"
       "csc225"
       (csc-SE)
       "csc348"
       "csc349"
       "csc430"
       "csc445"
       "csc453"
       (upper-level-csc-TE)
       (csc-TE/123)
       (csc-TE/special-problems)
       "cpe315"
       (ethics)
       (security)
       (csc-sp-1)
       (csc-sp-2)
       (csc-TE-0)
       (csc-TE-1)
       (csc-TE-2)
       (csc-TE-3)))
     (((EE) "2021-2022")
      .
      ("csc101"
       "ee211"
       "ee241"
       "ee111"
       "ee151"
       "cpe133"
       "cpe233"
       (circuits)
       (circuits-lab)
       "ee212"
       "ee242"
       "ee228"
       "ee255"
       "ee295"
       "ee302"
       "ee342"
       "ee306"
       "ee346"
       "ee307"
       "ee347"
       "ee308"
       "ee348"
       "ee314"
       "cpe328"
       "cpe368"
       (ee-microcon)
       "ee335"
       "ee375"
       "ee402"
       "ee409"
       "ee449"
       "ee460"
       (ee-sp-1)
       (ee-sp-2)
       (ee-TE-0)
       (ee-TE-1)
       (ee-TE-2)))
     (((CPE) "2020-2021")
      .
      ((cpe-arch)
       (microcon)
       (circuits)
       (cpe-circuits-lab)
       "ee211"
       "ee241"
       "ee212"
       "ee242"
       (cpe-signals)
       "ee306"
       "ee346"
       "ee307"
       "ee347"
       (cpe-sp-1)
       (cpe-sp-2)
       "csc101"
       "csc202"
       "csc203"
       "csc357"
       "cpe133"
       "cpe233"
       "cpe350"
       "cpe450"
       "csc453"
       "cpe464"
       "csc348"
       (cpe-TE/400)
       (cpe-TE/123)
       (cpe-TE-0)
       (cpe-TE-1)))
     (((SE) "2019-2020")
      .
      ("csc101"
       "csc202"
       "csc203"
       "csc357"
       "csc225"
       "csc305"
       "csc308"
       "csc309"
       "csc348"
       "csc349"
       "csc402"
       "csc405"
       "csc406"
       "csc430"
       "csc484"
       (upper-level-se-TE)
       (special-problems/se-TE)
       (se-TE/123)
       (ethics)
       "csc365"
       (se-TE-0)
       (se-TE-1)))
     (((EE) "2019-2020")
      .
      ("csc101"
       "ee211"
       "ee241"
       "ee111"
       "ee151"
       "cpe133"
       "cpe233"
       (circuits)
       (circuits-lab)
       "ee212"
       "ee242"
       "ee228"
       "ee255"
       "ee295"
       "ee302"
       "ee342"
       "ee306"
       "ee346"
       "ee307"
       "ee347"
       "ee308"
       "ee348"
       "ee314"
       "cpe328"
       "cpe368"
       (ee-microcon)
       "ee335"
       "ee375"
       "ee402"
       "ee409"
       "ee449"
       "ee460"
       (ee-sp-1)
       (ee-sp-2)
       (ee-TE-0)
       (ee-TE-1)
       (ee-TE-2)))
     (((CSC) "2017-2019")
      .
      ("csc101"
       "csc202"
       "csc203"
       "csc357"
       "csc225"
       (csc-SE)
       "csc348"
       "csc349"
       "csc430"
       "csc445"
       "csc453"
       (upper-level-csc-TE)
       (csc-TE/123)
       (csc-TE/special-problems)
       "cpe315"
       "csc431"
       "csc300"
       "csc491"
       "csc492"
       (csc-TE-0)
       (csc-TE-1)
       (csc-TE-2)
       (csc-TE-3)))
     (((CSC) "2022-2026")
      .
      ("csc101"
       "csc202"
       "csc203"
       "csc357"
       "csc225"
       (csc-SE)
       "csc348"
       "csc349"
       "csc430"
       "csc445"
       "csc453"
       (upper-level-csc-TE)
       (csc-TE/123)
       (csc-TE/special-problems)
       (ethics)
       "csc365"
       (distributed)
       (security)
       (csc-sp-1)
       (csc-sp-2)
       (csc-TE-0)
       (csc-TE-1)
       (csc-TE-2)))
     (((CPE) "2022-2026")
      .
      ((cpe-arch)
       (microcon2)
       "ee115"
       "ee145"
       "ee215"
       "ee245"
       "ee315"
       (cpe-signals)
       (cpe-security)
       (cpe-sp-1)
       (cpe-sp-2)
       "csc101"
       "csc202"
       "csc203"
       "csc357"
       "cpe133"
       "cpe233"
       "cpe350"
       "cpe450"
       "csc453"
       "cpe464"
       "csc348"
       (cpe-TE/400)
       (cpe-TE/123)
       (cpe-TE-0)
       (cpe-TE-1)
       (cpe-TE-2)
       ))
     (((CSC) "2019-2020")
      .
      ("csc101"
       "csc202"
       "csc203"
       "csc357"
       "csc225"
       (csc-SE)
       "csc348"
       "csc349"
       "csc430"
       "csc445"
       "csc453"
       (upper-level-csc-TE)
       (csc-TE/123)
       (csc-TE/special-problems)
       "cpe315"
       (ethics)
       (csc-sp-1)
       (csc-sp-2)
       (csc-TE-0)
       (csc-TE-1)
       (csc-TE-2)
       (csc-TE-3)
       (csc-TE-4)))
     (((EE) "2020-2021")
      .
      ("csc101"
       "ee211"
       "ee241"
       "ee111"
       "ee151"
       "cpe133"
       "cpe233"
       (circuits)
       (circuits-lab)
       "ee212"
       "ee242"
       "ee228"
       "ee255"
       "ee295"
       "ee302"
       "ee342"
       "ee306"
       "ee346"
       "ee307"
       "ee347"
       "ee308"
       "ee348"
       "ee314"
       "cpe328"
       "cpe368"
       (ee-microcon)
       "ee335"
       "ee375"
       "ee402"
       "ee409"
       "ee449"
       "ee460"
       (ee-sp-1)
       (ee-sp-2)
       (ee-TE-0)
       (ee-TE-1)
       (ee-TE-2)))
     (((SE) "2022-2026")
      .
      ("csc101"
       "csc202"
       "csc203"
       "csc357"
       "csc225"
       "csc305"
       "csc308"
       "csc309"
       "csc348"
       "csc349"
       "csc402"
       "csc405"
       "csc406"
       "csc430"
       "csc484"
       (upper-level-se-TE)
       (special-problems/se-TE)
       (se-TE/123)
       (ethics)
       "csc365"
       (se-TE-0)
       (se-TE-1)))
     (((EE) "2022-2026")
      .
      ("csc101"
       "ee211"
       "ee241"
       "ee111"
       "ee151"
       "cpe133"
       "cpe233"
       (circuits)
       (circuits-lab)
       "ee212"
       "ee242"
       "ee228"
       "ee255"
       "ee295"
       "ee302"
       "ee342"
       "ee306"
       "ee346"
       "ee307"
       "ee347"
       "ee308"
       "ee348"
       "ee314"
       "cpe328"
       "cpe368"
       (ee-microcon)
       "ee335"
       "ee375"
       "ee402"
       "ee409"
       "ee449"
       "ee460"
       (ee-sp-1)
       (ee-sp-2)
       (ee-TE-0)
       (ee-TE-1)
       (ee-TE-2)))
     (((CPE) "2019-2020")
      .
      ((cpe-arch)
       (microcon)
       (circuits)
       (cpe-circuits-lab)
       "ee211"
       "ee241"
       "ee212"
       "ee242"
       (cpe-signals)
       "ee306"
       "ee346"
       "ee307"
       "ee347"
       (cpe-sp-1)
       (cpe-sp-2)
       "csc101"
       "csc202"
       "csc203"
       "csc357"
       "cpe133"
       "cpe233"
       "cpe350"
       "cpe450"
       "csc453"
       "cpe464"
       "csc348"
       (cpe-TE/400)
       (cpe-TE/123)
       (cpe-TE-0)
       (cpe-TE-1)))
     (((CPE) "2017-2019")
      .
      ("csc101"
       "csc202"
       "csc203"
       "csc357"
       "cpe133"
       "cpe233"
       "cpe350"
       "cpe450"
       "csc453"
       "cpe464"
       "csc348"
       (cpe-TE/400)
       (cpe-TE/123)
       (cpe-TE-0)
       (cpe-TE-1)
       "cpe315"
       "cpe329"
       (cpe-sp-1)
       (cpe-sp-2)))
     (((SE) "2020-2021")
      .
      ("csc101"
       "csc202"
       "csc203"
       "csc357"
       "csc225"
       "csc305"
       "csc308"
       "csc309"
       "csc348"
       "csc349"
       "csc402"
       "csc405"
       "csc406"
       "csc430"
       "csc484"
       (upper-level-se-TE)
       (special-problems/se-TE)
       (se-TE/123)
       (ethics)
       "csc365"
       (se-TE-0)
       (se-TE-1)))))))

  (check-equal? (list->set (hash-keys test-val))
                (list->set (hash-keys expected-val))
                "hash table keys")

  (for ([k (in-list (set-intersect (hash-keys test-val) (hash-keys expected-val)))])
    (check-equal?
     (hash-ref test-val k)
     (hash-ref expected-val k)
     (format "value for key ~e" k)))
)